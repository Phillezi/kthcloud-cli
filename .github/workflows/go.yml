name: Go

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - README.md
      - .gitignore
      #- .github/**
      - LICENSE

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
        go-version: ['1.23.1']
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Build
      run: |
        mkdir -p bin
        case ${{ matrix.os }} in
          linux)
            GOOS=linux GOARCH=amd64 make BINARY_NAME=kthcloud_amd64_linux ;;
          windows)
            GOOS=windows GOARCH=amd64 make BINARY_NAME=kthcloud_amd64_windows.exe ;;
          darwin)
            GOOS=darwin GOARCH=arm64 make BINARY_NAME=kthcloud_arm64_macos ;;
        esac

    - name: Upload Linux Binary
      if: matrix.os == 'linux'
      uses: actions/upload-artifact@v3
      with:
        name: linux-binaries
        path: ./bin/kthcloud_amd64_linux

    - name: Upload Windows Binary
      if: matrix.os == 'windows'
      uses: actions/upload-artifact@v3
      with:
        name: windows-binaries
        path: ./bin/kthcloud_amd64_windows.exe

    - name: Upload macOS Binary
      if: matrix.os == 'darwin'
      uses: actions/upload-artifact@v3
      with:
        name: darwin-binaries
        path: ./bin/kthcloud_arm64_macos

  release:
    needs: build
    runs-on: ubuntu-latest
    outputs:
        upload_url: ${{ steps.step_upload_url.outputs.upload_url }}
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: linux-binaries
    - uses: actions/download-artifact@v3
      with:
        name: windows-binaries
    - uses: actions/download-artifact@v3
      with:
        name: darwin-binaries
        
    - name: Get current timestamp
      id: timestamp
      run: echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        tag_name: release-${{ env.TIMESTAMP }}
        release_name: Release ${{ github.ref }}
        body: Latest release build by github actions
        
    - id: step_upload_url
      run: echo "::set-output name=upload_url::${{ steps.create_release.outputs.upload_url }}"
      
  upload-bins:
    needs: 
      - build 
      - release
    runs-on: ubuntu-latest
    steps:
    - name: Upload Linux Binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./bin/kthcloud_amd64_linux
        asset_name: kthcloud_amd64_linux
        asset_content_type: application/octet-stream

    - name: Upload Windows Binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./bin/kthcloud_amd64_windows.exe
        asset_name: kthcloud_amd64_windows.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS Binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./bin/kthcloud_arm64_macos
        asset_name: kthcloud_arm64_macos
        asset_content_type: application/octet-stream
